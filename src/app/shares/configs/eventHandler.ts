// shares/websocket/eventHandler.ts
import { notification } from "antd";
import { queryClient } from "./queryClient";
import { QueryKeyEnum } from "../enums/queryKey";
import { toast } from "react-toastify";

// eslint-disable-next-line @typescript-eslint/no-explicit-any
export const handleSocketEvent = (data: any) => {
  switch (data.type) {
    case "NEW_APPOINTMENT":
      notification.open({
        message: "ðŸ“… Lá»‹ch háº¹n má»›i",
        description: data.payload?.message || "Báº¡n cÃ³ lá»‹ch háº¹n má»›i tá»« bá»‡nh nhÃ¢n.",
      });
      console.log("Ä‘Ã£ Ä‘áº·t thÃ nh cÃ´ng nhÃ© 12211");

      // âœ… Refresh láº¡i danh sÃ¡ch lá»‹ch khÃ¡m (React Query tá»± refetch)
      queryClient.invalidateQueries({ queryKey: [QueryKeyEnum.Appointment], exact: false });
      break;

    // cÃ³ thá»ƒ thÃªm cÃ¡c event khÃ¡c á»Ÿ Ä‘Ã¢y
    case "CANCEL_APPOINTMENT":
      notification.warning({
        message: "Lá»‹ch háº¹n bá»‹ há»§y",
        description: data.payload?.message || "Bá»‡nh nhÃ¢n Ä‘Ã£ há»§y lá»‹ch háº¹n.",
      });
      queryClient.invalidateQueries({ queryKey: ["appointments"] });
      break;

    case "NEW_NOTIFICATION":
      toast.success(
        data.payload?.notification?.title ||
          "ðŸ”” ThÃ´ng bÃ¡o má»›i\n" + (data.payload?.notification?.message || "Báº¡n cÃ³ thÃ´ng bÃ¡o má»›i."),
      );
      console.log("CÃ³ notification má»›i:", data.payload?.notification);

      queryClient.invalidateQueries({ queryKey: [QueryKeyEnum.Notification], exact: false });
      break;

    default:
      console.log("[WS] Unknown event:", data);
  }
};
